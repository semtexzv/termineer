[workspace]
members = [".", "server"]
resolver = "2"

# Shared dependencies across workspace
[workspace.dependencies]
anyhow = "1.0"
thiserror = "2.0.12"

serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "=0.9.33"
tokio = { version = "1", features = ["full"] }
reqwest = { version = "0.12.14", features = ["json", "rustls-tls", "rustls-tls-webpki-roots"], default-features = false }
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.4.1", features = ["v4", "serde"] }
dotenvy = "0.15"
image = { version = "0.25.5", default-features = false, features = ["jpeg", "png"] }

log = "0.4.20"
tracing = "0.1"
tracing-subscriber = "0.3"
# Auth dependencies
oauth2 = { version = "5.0.0", features = ["reqwest"] }
jsonwebtoken = "9.3.1"
# Build dependencies
aes-gcm = "0.10.3"
walkdir = "2.4.0"
quote = "1.0.33"
proc-macro2 = "1.0.78"

[package]
name = "termineer"
version = "0.2.13"
edition = "2021"
license = "MIT"

[features]
default = []

[profile.dev.package."*"]
opt-level = 3

# Release profile optimizations for binary size
[profile.release]
# Generate debug info for better troubleshooting
debug = true
# Split debug info into separate files to keep binary small
split-debuginfo = "packed"
# Enable stripping of debug symbols from the main binary
strip = true
# Optimize for size
opt-level = "z"
# Enable Link Time Optimization
lto = true
# Reduce parallel code generation units to increase optimization
codegen-units = 1

[dependencies]
anyhow = { workspace = true }  # Error handling
serde = { workspace = true }
serde_json = { workspace = true }
serde_yaml = { workspace = true }
reqwest = { workspace = true, features = ["rustls-tls-webpki-roots"], default-features = false }
tokio = { workspace = true }
futures = "0.3"
async-trait = "0.1"
dotenvy = { workspace = true }

# GUI dependencies 
egui = { version = "0.31.1", features = ["accesskit"] }
# egui framework with winit and web support
eframe = { version = "0.31.1", features = ["accesskit"] }
# Official Catppuccin integration for egui
catppuccin-egui = { version = "5.5.0", default-features = false, features = ["egui31"] }
crossterm = "0.27"
ratatui = "0.26.1"
atty = "0.2"
chrono = { workspace = true }
thiserror = { workspace = true }
ctrlc = "3.4.1"
lazy_static = "1.4.0"  # For static initialization
handlebars = "6.3.1"  # Handlebars templating
urlencoding = "2.1.3"  # URL encoding for API requests
aes-gcm = "0.10.3"     # AES-GCM encryption
obfstr = "0.4.3"       # String obfuscation for sensitive constants
rand = "0.8.5"         # For random number generation
dirs = "5.0.1"         # For getting user directories
base64 = "0.21.5"      # For encoding/decoding base64 in OAuth flow and screenshots
xcap = { version = "0.4.0", default-features = false }
image = { workspace = true }  # Image processing from workspace dependencies
glob = "0.3.1"         # For glob pattern matching in autoinclude feature
scraper = "0.23.1"
clap = { version = "4.4", features = ["derive"] }  # Command-line argument parsing
quick-xml = "0.30.0"   # For XML serialization in screendump
indexmap = "2.8.0"

# Dependencies for Computer Use feature
enigo = "0.3.0"        # Cross-platform keyboard and mouse control

[target.'cfg(target_os = "macos")'.dependencies]
# Replaced objc with objc2 and related crates
objc2 = { version = "0.6.0", features = ["exception"] }  # Modern Objective-C runtime bindings
objc2-foundation = "0.3.0"          # Foundation framework bindings
objc2-app-kit = "0.3.0"             # AppKit framework bindings
block2 = "0.6.0"                    # Objective-C blocks support
core-graphics = "0.23.1"            # For mouse and keyboard events
core-graphics-types = "0.1.3"
core-foundation = "0.10.0" # Core Foundation bindings
accessibility-sys-ng = { version = "0.2", git = "https://github.com/semtexzv/accessibility-ng", branch = "publish" }
accessibility-ng = { version = "0.2", git = "https://github.com/semtexzv/accessibility-ng", branch = "publish" }

[target.'cfg(target_os = "windows")'.dependencies]
winapi = { version = "0.3.9", features = ["winuser"] } # Windows API for cursor position

[build-dependencies]
aes-gcm = { workspace = true }    # AES-GCM encryption
walkdir = { workspace = true }    # For walking directories in build script
quote = { workspace = true }      # For code generation
proc-macro2 = { workspace = true }# Required by quote
